# 0-add_integer.txt

=================================
# How to Use 0-add_integer.py
=================================


# Import the add_integer function from the module.
>>> add_integer = __import__('0-add_integer').add_integer

# Test the addition of two integers.
>>> add_integer(2, 3)
5

# Test the addition of an integer and a negative integer.
>>> add_integer(2, -3)
-1

# Test the addition of two floating-point numbers.
>>> add_integer(2.0, 3.0)
5

# Test the addition of floating-point numbers (cast to int before addition).
>>> add_integer(2.9, 0.2)
2

# Test the addition of negative floating-point numbers (cast to int).
>>> add_integer(-2.9, -0.2)
-2

# Test the addition of a floating-point number and an integer.
>>> add_integer(2.3, -3)
-1

# Test the addition of an integer and the default value (98).
>>> add_integer(2)
100

# Test cases with non-integer/non-float arguments.
>>> add_integer("hello", 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(2, "hello")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(2.3, None)
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Test cases with infinity and NaN values
>>> add_integer(float('inf'))
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

